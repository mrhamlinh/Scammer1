--[[
    ====================================================================================================
    ||                                                                                                ||
    ||  DISCLAIMER: This script is for educational and proof-of-concept purposes only.                ||
    ||  The use of exploiting scripts is against Roblox's Terms of Service.                           ||
    ||  I am not responsible for any bans or consequences that may result from its usage.             ||
    ||                                                                                                ||
    ====================================================================================================
]]

--====================================================================================================
-- // Main Spawner Library Loader & Wrapper
--====================================================================================================

local Spawner = {}
local pet_names = {}
local seed_names = {}
local egg_names = {}
local selected_item_name = nil

-- This function simulates loading the library and fetching data.
-- In a real scenario, this might involve game:HttpGet or other methods.
local function loadSpawnerLibrary()
    -- [MOCK] In a real executor script, this would be where you'd
    -- use game:HttpGet or loadstring to pull in the actual spawner library.
    -- For this template, we will simulate the library's functions and data.

    -- Simulate fetching item names
    pet_names = {"Dragon", "Unicorn", "Griffin", "Phoenix", "Leviathan", "Kraken"}
    seed_names = {"Golden Seed", "Mystic Seed", "Shadow Seed", "Crystal Seed"}
    egg_names = {"Common Egg", "Rare Egg", "Epic Egg", "Legendary Egg"}

    -- Simulate the core functions of the spawner library
    function Spawner.SpawnPet(name, amount, kg, age)
        print(string.format("Spawner: Attempting to spawn %d pet(s) named '%s' with KG '%s' and Age '%s'.", amount, name, kg, age))
        -- Actual spawn logic would be here
    end

    function Spawner.SpawnSeed(name, amount)
        print(string.format("Spawner: Attempting to spawn %d seed(s) named '%s'.", amount, name))
        -- Actual spawn logic would be here
    end

    function Spawner.SpawnEgg(name, amount)
        print(string.format("Spawner: Attempting to spawn %d egg(s) named '%s'.", amount, name))
        -- Actual spawn logic would be here
    end

    function Spawner.DupeItem()
        print("Spawner: Attempting to handle item duplication.")
        -- Actual dupe logic would be here
    end

    return true -- Indicate success
end

--====================================================================================================
-- // UI Builder
--====================================================================================================

local function BuildYourInterface()
    if not getgenv().SpawnerGUI then
        getgenv().SpawnerGUI = true
    else
        return
    end

    -- // Theme and Configuration
    local THEME = {
        BACKGROUND = Color3.fromRGB(30, 30, 30),
        PRIMARY = Color3.fromRGB(45, 45, 45),
        SECONDARY = Color3.fromRGB(60, 60, 60),
        TEXT = Color3.fromRGB(255, 255, 255),
        TEXT_MUTED = Color3.fromRGB(180, 180, 180),
        HIGHLIGHT = Color3.fromRGB(0, 122, 255),
        FONT = Enum.Font.SourceSans
    }

    -- // Main ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.ResetOnSpawn = false
    screenGui.Parent = game:GetService("CoreGui")

    -- // Main Window
    local mainWindow = Instance.new("Frame")
    mainWindow.Size = UDim2.new(0, 550, 0, 400)
    mainWindow.Position = UDim2.new(0.5, -275, 0.5, -200)
    mainWindow.BackgroundColor3 = THEME.BACKGROUND
    mainWindow.BorderSizePixel = 0
    mainWindow.Parent = screenGui

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = mainWindow

    local stroke = Instance.new("UIStroke")
    stroke.Color = THEME.HIGHLIGHT
    stroke.Thickness = 1
    stroke.Parent = mainWindow

    -- // Title Bar
    local titleBar = Instance.new("Frame")
    titleBar.Size = UDim2.new(1, 0, 0, 30)
    titleBar.BackgroundColor3 = THEME.PRIMARY
    titleBar.BorderSizePixel = 0
    titleBar.Parent = mainWindow

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, -10, 1, 0)
    titleLabel.Position = UDim2.new(0, 5, 0, 0)
    titleLabel.BackgroundColor3 = THEME.PRIMARY
    titleLabel.Text = "Item Spawner"
    titleLabel.Font = THEME.FONT
    titleLabel.TextColor3 = THEME.TEXT
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = titleBar

    -- // Tab Container
    local tabContainer = Instance.new("Frame")
    tabContainer.Size = UDim2.new(0, 120, 1, -30)
    tabContainer.Position = UDim2.new(0, 0, 0, 30)
    tabContainer.BackgroundColor3 = THEME.PRIMARY
    tabContainer.BorderSizePixel = 0
    tabContainer.Parent = mainWindow

    local tabLayout = Instance.new("UIListLayout")
    tabLayout.Padding = UDim.new(0, 5)
    tabLayout.Parent = tabContainer

    -- // Content Container
    local contentContainer = Instance.new("Frame")
    contentContainer.Size = UDim2.new(1, -120, 1, -30)
    contentContainer.Position = UDim2.new(0, 120, 0, 30)
    contentContainer.BackgroundColor3 = THEME.BACKGROUND
    contentContainer.BorderSizePixel = 0
    contentContainer.Parent = mainWindow

    -- // Function to create a tab button and its corresponding content frame
    local function createTab(name)
        local tabButton = Instance.new("TextButton")
        tabButton.Size = UDim2.new(1, 0, 0, 30)
        tabButton.Text = name
        tabButton.BackgroundColor3 = THEME.PRIMARY
        tabButton.TextColor3 = THEME.TEXT_MUTED
        tabButton.Font = THEME.FONT
        tabButton.Parent = tabContainer

        local contentFrame = Instance.new("Frame")
        contentFrame.Size = UDim2.new(1, 0, 1, 0)
        contentFrame.BackgroundColor3 = THEME.BACKGROUND
        contentFrame.BorderSizePixel = 0
        contentFrame.Visible = false
        contentFrame.Parent = contentContainer
        contentFrame.Name = name .. "Content"

        tabButton.MouseButton1Click:Connect(function()
            for _, child in ipairs(contentContainer:GetChildren()) do
                child.Visible = false
            end
            for _, btn in ipairs(tabContainer:GetChildren()) do
                if btn:IsA("TextButton") then
                    btn.TextColor3 = THEME.TEXT_MUTED
                end
            end
            contentFrame.Visible = true
            tabButton.TextColor3 = THEME.HIGHLIGHT
            selected_item_name = nil -- Clear selection when changing tabs
        end)
        return contentFrame
    end

    -- // Function to create an item list within a frame
    local function createItemList(parentFrame, items, itemType)
        local scrollingFrame = Instance.new("ScrollingFrame")
        scrollingFrame.Size = UDim2.new(1, -10, 0.5, -5)
        scrollingFrame.Position = UDim2.new(0, 5, 0, 5)
        scrollingFrame.BackgroundColor3 = THEME.SECONDARY
        scrollingFrame.BorderSizePixel = 0
        scrollingFrame.Parent = parentFrame

        local listLayout = Instance.new("UIListLayout")
        listLayout.Padding = UDim.new(0, 2)
        listLayout.SortOrder = Enum.SortOrder.LayoutOrder
        listLayout.Parent = scrollingFrame

        for _, itemName in ipairs(items) do
            local itemButton = Instance.new("TextButton")
            itemButton.Size = UDim2.new(1, 0, 0, 25)
            itemButton.Text = itemName
            itemButton.BackgroundColor3 = THEME.SECONDARY
            itemButton.TextColor3 = THEME.TEXT
            itemButton.Font = THEME.FONT
            itemButton.Parent = scrollingFrame

            itemButton.MouseButton1Click:Connect(function()
                for _, btn in ipairs(scrollingFrame:GetChildren()) do
                    if btn:IsA("TextButton") then
                        btn.BackgroundColor3 = THEME.SECONDARY
                    end
                end
                itemButton.BackgroundColor3 = THEME.HIGHLIGHT
                selected_item_name = itemName
            end)
        end
    end

    -- // Function to create a text input box
    local function createTextBox(parentFrame, placeholder, position)
        local box = Instance.new("TextBox")
        box.Size = UDim2.new(0.45, 0, 0, 30)
        box.Position = position
        box.BackgroundColor3 = THEME.SECONDARY
        box.TextColor3 = THEME.TEXT
        box.PlaceholderText = placeholder
        box.PlaceholderColor3 = THEME.TEXT_MUTED
        box.Font = THEME.FONT
        box.Parent = parentFrame
        return box
    end

    -- // Create Tabs and Content
    local petsFrame = createTab("Pets")
    local seedsFrame = createTab("Seeds")
    local eggsFrame = createTab("Eggs")
    local utilsFrame = createTab("Utilities")

    -- // Populate Pets Tab
    createItemList(petsFrame, pet_names, "Pet")
    local petAmountBox = createTextBox(petsFrame, "Amount", UDim2.new(0.025, 0, 0.5, 10))
    local kgBox = createTextBox(petsFrame, "KG", UDim2.new(0.525, 0, 0.5, 10))
    local ageBox = createTextBox(petsFrame, "Age", UDim2.new(0.025, 0, 0.5, 50))
    local spawnPetButton = Instance.new("TextButton")
    spawnPetButton.Size = UDim2.new(0.45, 0, 0, 30)
    spawnPetButton.Position = UDim2.new(0.525, 0, 0.5, 50)
    spawnPetButton.Text = "Spawn Pet"
    spawnPetButton.BackgroundColor3 = THEME.HIGHLIGHT
    spawnPetButton.TextColor3 = THEME.TEXT
    spawnPetButton.Font = THEME.FONT
    spawnPetButton.Parent = petsFrame
    spawnPetButton.MouseButton1Click:Connect(function()
        if selected_item_name then
            local amount = tonumber(petAmountBox.Text) or 1
            Spawner.SpawnPet(selected_item_name, amount, kgBox.Text, ageBox.Text)
        end
    end)


    -- // Populate Seeds Tab
    createItemList(seedsFrame, seed_names, "Seed")
    local seedAmountBox = createTextBox(seedsFrame, "Amount", UDim2.new(0.025, 0, 0.5, 10))
    local spawnSeedButton = Instance.new("TextButton")
    spawnSeedButton.Size = UDim2.new(0.45, 0, 0, 30)
    spawnSeedButton.Position = UDim2.new(0.525, 0, 0.5, 10)
    spawnSeedButton.Text = "Spawn Seed"
    spawnSeedButton.BackgroundColor3 = THEME.HIGHLIGHT
    spawnSeedButton.TextColor3 = THEME.TEXT
    spawnSeedButton.Font = THEME.FONT
    spawnSeedButton.Parent = seedsFrame
    spawnSeedButton.MouseButton1Click:Connect(function()
        if selected_item_name then
            local amount = tonumber(seedAmountBox.Text) or 1
            Spawner.SpawnSeed(selected_item_name, amount)
        end
    end)

    -- // Populate Eggs Tab
    createItemList(eggsFrame, egg_names, "Egg")
    local eggAmountBox = createTextBox(eggsFrame, "Amount", UDim2.new(0.025, 0, 0.5, 10))
    local spawnEggButton = Instance.new("TextButton")
    spawnEggButton.Size = UDim2.new(0.45, 0, 0, 30)
    spawnEggButton.Position = UDim2.new(0.525, 0, 0.5, 10)
    spawnEggButton.Text = "Spawn Egg"
    spawnEggButton.BackgroundColor3 = THEME.HIGHLIGHT
    spawnEggButton.TextColor3 = THEME.TEXT
    spawnEggButton.Font = THEME.FONT
    spawnEggButton.Parent = eggsFrame
    spawnEggButton.MouseButton1Click:Connect(function()
        if selected_item_name then
            local amount = tonumber(eggAmountBox.Text) or 1
            Spawner.SpawnEgg(selected_item_name, amount)
        end
    end)

    -- // Populate Utilities Tab
    local dupeButton = Instance.new("TextButton")
    dupeButton.Size = UDim2.new(1, -20, 0, 40)
    dupeButton.Position = UDim2.new(0, 10, 0, 10)
    dupeButton.Text = "Handle Dupe Item"
    dupeButton.BackgroundColor3 = THEME.HIGHLIGHT
    dupeButton.TextColor3 = THEME.TEXT
    dupeButton.Font = THEME.FONT
    dupeButton.Parent = utilsFrame
    dupeButton.MouseButton1Click:Connect(Spawner.DupeItem)

    -- // Make first tab active by default
    petsFrame.Visible = true
    local firstTabButton = tabContainer:FindFirstChildOfClass("TextButton")
    if firstTabButton then
        firstTabButton.TextColor3 = THEME.HIGHLIGHT
    end
end

--====================================================================================================
-- // Execution Flow
--====================================================================================================

if loadSpawnerLibrary() then
    BuildYourInterface()
else
    warn("Failed to load the Spawner library. The UI will not be shown.")
end
